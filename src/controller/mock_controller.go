// Code generated by MockGen. DO NOT EDIT.
// Source: studentReports/src/controller (interfaces: StudentRepoOperations)

// Package mocks is a generated GoMock package.
package controller

import (
	reflect "reflect"
	model "studentReports/src/model"

	gomock "github.com/golang/mock/gomock"
)

// MockStudentRepoOperations is a mock of StudentRepoOperations interface.
type MockStudentRepoOperations struct {
	ctrl     *gomock.Controller
	recorder *MockStudentRepoOperationsMockRecorder
}

// MockStudentRepoOperationsMockRecorder is the mock recorder for MockStudentRepoOperations.
type MockStudentRepoOperationsMockRecorder struct {
	mock *MockStudentRepoOperations
}

// NewMockStudentRepoOperations creates a new mock instance.
func NewMockStudentRepoOperations(ctrl *gomock.Controller) *MockStudentRepoOperations {
	mock := &MockStudentRepoOperations{ctrl: ctrl}
	mock.recorder = &MockStudentRepoOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStudentRepoOperations) EXPECT() *MockStudentRepoOperationsMockRecorder {
	return m.recorder
}

// CreateStudentInfo mocks base method.
func (m *MockStudentRepoOperations) CreateStudentInfo(arg0 model.Student) (model.Student, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStudentInfo", arg0)
	ret0, _ := ret[0].(model.Student)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStudentInfo indicates an expected call of CreateStudentInfo.
func (mr *MockStudentRepoOperationsMockRecorder) CreateStudentInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStudentInfo", reflect.TypeOf((*MockStudentRepoOperations)(nil).CreateStudentInfo), arg0)
}

// GetResultInfo mocks base method.
func (m *MockStudentRepoOperations) GetResultInfo() ([]model.Student, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResultInfo")
	ret0, _ := ret[0].([]model.Student)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResultInfo indicates an expected call of GetResultInfo.
func (mr *MockStudentRepoOperationsMockRecorder) GetResultInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResultInfo", reflect.TypeOf((*MockStudentRepoOperations)(nil).GetResultInfo))
}

// GetStudentInfo mocks base method.
func (m *MockStudentRepoOperations) GetStudentInfo(arg0 int) (model.Student, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStudentInfo", arg0)
	ret0, _ := ret[0].(model.Student)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStudentInfo indicates an expected call of GetStudentInfo.
func (mr *MockStudentRepoOperationsMockRecorder) GetStudentInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStudentInfo", reflect.TypeOf((*MockStudentRepoOperations)(nil).GetStudentInfo), arg0)
}

// GetStudents mocks base method.
func (m *MockStudentRepoOperations) GetStudents() ([]model.Student, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStudents")
	ret0, _ := ret[0].([]model.Student)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStudents indicates an expected call of GetStudents.
func (mr *MockStudentRepoOperationsMockRecorder) GetStudents() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStudents", reflect.TypeOf((*MockStudentRepoOperations)(nil).GetStudents))
}

// RemoveStudentInfo mocks base method.
func (m *MockStudentRepoOperations) RemoveStudentInfo(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveStudentInfo", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveStudentInfo indicates an expected call of RemoveStudentInfo.
func (mr *MockStudentRepoOperationsMockRecorder) RemoveStudentInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveStudentInfo", reflect.TypeOf((*MockStudentRepoOperations)(nil).RemoveStudentInfo), arg0)
}

// UpdateStudentInfo mocks base method.
func (m *MockStudentRepoOperations) UpdateStudentInfo(arg0 int, arg1 model.Student) (model.Student, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStudentInfo", arg0, arg1)
	ret0, _ := ret[0].(model.Student)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateStudentInfo indicates an expected call of UpdateStudentInfo.
func (mr *MockStudentRepoOperationsMockRecorder) UpdateStudentInfo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStudentInfo", reflect.TypeOf((*MockStudentRepoOperations)(nil).UpdateStudentInfo), arg0, arg1)
}
